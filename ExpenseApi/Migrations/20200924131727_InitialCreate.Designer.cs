// <auto-generated />
using System;
using ExpenseApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExpenseApi.Migrations
{
    [DbContext(typeof(ExpenseContext))]
    [Migration("20200924131727_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExpenseApi.Models.Expense", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Recipient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Expenses");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Amount = 200.0,
                            Currency = "CHF",
                            Recipient = "Stefan",
                            TransactionDate = new DateTime(2020, 9, 23, 0, 0, 0, 0, DateTimeKind.Local),
                            Type = 1
                        },
                        new
                        {
                            Id = 2L,
                            Amount = 300.0,
                            Currency = "EUR",
                            Recipient = "Cezary",
                            TransactionDate = new DateTime(2020, 9, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            Type = 2
                        },
                        new
                        {
                            Id = 3L,
                            Amount = 100.0,
                            Currency = "USD",
                            Recipient = "Etienne",
                            TransactionDate = new DateTime(2020, 9, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            Type = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
